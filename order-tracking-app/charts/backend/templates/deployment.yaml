apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: "{{.Values.appName}}-backend-deployment"

  labels:
    app: {{ .Values.backend_name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.backend_name }}
  template:
    metadata:
      labels:
        app: {{ .Values.backend_name }}
    spec:
      initContainers:
        - name: wait-for-master-db
          image: busybox:1.28
          command:
            - "sh"
            - "-c"
            - |
              until nc -z {{ .Values.configmap.data.master_db_service }} 5432; do
                echo "Waiting for master database to be ready..."
                sleep 2
              done
              echo "Master database is ready!"
        - name: wait-for-slave-db
          image: busybox:1.28
          command:
            - "sh"
            - "-c"
            - |
              until nc -z {{ .Values.configmap.data.slave_db_service }} 5432; do
                echo "Waiting for slave database to be ready..."
                sleep 2
              done
              echo "Slave database is ready!"
      containers:
        - name: {{ .Values.server.containerName }}
          image: "{{ .Values.server.image }}:{{ .Values.server.tag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.server.port }}
          envFrom:
            - configMapRef:
                name: {{ .Values.configmap.name }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              port: 8080
              path: /actuator/health/liveness
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              port: 8080
              path: /actuator/health/readiness
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          startupProbe:
            failureThreshold: 1
            httpGet:
              port: 8080
              path: /actuator/health/liveness
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 20